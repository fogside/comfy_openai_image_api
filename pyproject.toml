[build-system]
requires = ["setuptools>=70.0"]
build-backend = "setuptools.build_meta"

[project]
name = "comfy_openai_image_api"
version = "0.0.4"
description = "This custom node uses OpenAI Image API to generate image (if no input image is provided) or edit image (if input image is provided) with the latest gpt-image-1 model. To use it, you will need to provide your OpenAI API key. This makes the node to be friendly for situations where ComfyUi serves as API server, because you don't have to login like the official OpenAI GPT Image 1 node does."
authors = [
  {name = "Xin", email = "unicough.github@gmail.com"}
]
readme = "README.md"
license = {text = "MIT license"}
classifiers = []
dependencies = [
    "numpy",
    "torch",
    "Pillow",
    "openai>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "bump-my-version",
    "coverage",  # testing
    "mypy",  # linting
    "pre-commit", # runs linting on commit
    "pytest",  # testing
    "ruff",  # linting
]

[project.urls]
bugs = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/issues"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
Repository = "https://github.com/unicough/comfy_openai_image_api.git"


[tool.comfy]
PublisherId = "unicough"
DisplayName = "OpenAI Image API"
Icon = ""

[tool.setuptools.package-data]
"*" = ["*.*"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = [
    "tests",
]

[tool.mypy]
files = "."

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
allow_untyped_defs = true
disable_error_code = "attr-defined"

[tool.ruff]
# extend-exclude = ["static", "ci/templates"]
line-length = 140
src = ["src", "tests"]
target-version = "py39"

# Add rules to ban exec/eval
[tool.ruff.lint]
select = [
    "S102",  # exec-builtin
    "S307",  # eval-used
    "W293",
    "F",  # The "F" series in Ruff stands for "Pyflakes" rules, which catch various Python syntax errors and undefined names.
    # See all rules here: https://docs.astral.sh/ruff/rules/#pyflakes-f
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
